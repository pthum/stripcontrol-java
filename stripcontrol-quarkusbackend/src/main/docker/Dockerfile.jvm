####
# This Dockerfile is used in order to build a container that runs the Quarkus application in JVM mode
#
# Before building the docker image run:
#
# mvn package
#
# Then, build the image with:
#
# docker build -f src/main/docker/Dockerfile.jvm -t quarkus/stripcontrol-quarkusbackend-jvm .
#
# Then run the container using:
#
# docker run -i --rm -p 8080:8080 quarkus/stripcontrol-quarkusbackend-jvm
#
# If you want to include the debug port into your docker image
# you will have to expose the debug port (default 5005) like this :  EXPOSE 8080 5050
# 
# Then run the container using : 
#
# docker run -i --rm -p 8080:8080 -p 5005:5005 -e JAVA_ENABLE_DEBUG="true" quarkus/stripcontrol-quarkusbackend-jvm
#
###
### base image
FROM  adoptopenjdk:11-jdk-hotspot as builder

ARG RUN_JAVA_VERSION=1.3.5

RUN apt-get update && apt-get install -y \
    git-core \
    build-essential \
    gcc \
    --no-install-recommends && \
    rm -rf /var/lib/apt/lists/*

# should have been this, but git.drogon.net was currently offline
# so i need to take an unofficial mirror
#RUN git clone git://git.drogon.net/wiringPi

RUN git clone https://github.com/WiringPi/WiringPi.git && \
    cd WiringPi && WIRINGPI_SUDO=" " ./build

ADD ./stripcontrol/ /stripcontrol

RUN set -eux; \
    chown -R 0.0 /stripcontrol; \
    chmod 0666 /stripcontrol/*.jar; \
    chmod 0777 /stripcontrol/*.sh; \
    curl https://repo1.maven.org/maven2/io/fabric8/run-java-sh/${RUN_JAVA_VERSION}/run-java-sh-${RUN_JAVA_VERSION}-sh.sh -o /stripcontrol/run-java.sh; \
    chmod 540 /stripcontrol/run-java.sh;

### end builder

#image itself
FROM  adoptopenjdk:11-jdk-hotspot

COPY --from=builder /usr/lib/libwiring* /usr/lib/
COPY --from=builder /stripcontrol /stripcontrol

EXPOSE 8080

#ENTRYPOINT ["java","-Xmx144M", "-Xss256k","-Djava.security.egd=file:/dev/./urandom","-jar","/stripcontrol/stripcontrol.jar"]
#ENTRYPOINT ["/stripcontrol/entrypoint.sh"]
ENTRYPOINT [ "/stripcontrol/run-java.sh" ]

HEALTHCHECK --interval=30s --timeout=5s --retries=3 --start-period=10s \
  CMD curl --fail http://localhost:8080/api/health || exit 1